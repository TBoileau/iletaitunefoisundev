version: '3.9'


volumes:
  node_modules:
  db-data:
  neo4j-test-conf:
  neo4j-test-data:
  neo4j-test-import:
  neo4j-test-logs:
  neo4j-test-plugins:
  neo4j-dev-conf:
  neo4j-dev-data:
  neo4j-dev-import:
  neo4j-dev-logs:
  neo4j-dev-plugins:

networks:
  dev:
    driver: bridge


services:

  neo4j-test:
    image: neo4j:3.5
    restart: unless-stopped
    volumes:
      - neo4j-test-conf:/conf
      - neo4j-test-data:/data
      - neo4j-test-import:/import
      - neo4j-test-logs:/logs
      - neo4j-test-plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_AUTH=none
    networks:
      - dev

  neo4j-dev:
    image: neo4j:3.5
    restart: unless-stopped
    volumes:
      - neo4j-dev-conf:/conf
      - neo4j-dev-data:/data
      - neo4j-dev-import:/import
      - neo4j-dev-logs:/logs
      - neo4j-dev-plugins:/plugins
    ports:
      - "7475:7474"
      - "7688:7687"
    environment:
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_AUTH=none
    networks:
      - dev


  mailer:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
    networks:
      - dev

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - dev


  nginx:
    build:
      context: docker/nginx
    restart: on-failure
    volumes:
      - ./server:/var/www/backend:cached
      - ./docker/nginx/server.conf:/etc/nginx/conf.d/server.conf:cached
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - dev

  backend:
    build:
      context: docker/php
    restart: on-failure
    volumes:
      - ./server:/var/www/backend:cached
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    depends_on:
      - mysql
    networks:
      - dev

  frontend-hot:
    build:
      context: client
      dockerfile: Dockerfile.hotreload
    ports:
      - "4200:4200"
    volumes:
      - ./client:/var/www/frontend
      - node_modules:/var/www/frontend/node_modules

