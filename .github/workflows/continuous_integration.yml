name: Fast Continuous Integration
on: [push]

jobs:
  back-env:
    name: Backend environment setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist

  back-quality:
    needs:
      - back-env
    name: Backend code quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist

      - name: Check if composer is valid
        run: composer valid

      - name: Container linter
        run: bin/console lint:container

      - name: Check if doctrine schema is valid
        run: bin/console doctrine:schema:valid --skip-sync

      - name: Copy Paste detector
        run: vendor/bin/phpcpd src --exclude src/Admin/Controller

      - name: PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon --memory-limit=4G

  back-test:
    needs:
      - back-env
    name: Backend code tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=1s --health-timeout=5s --health-retries=30
      neo4j:
        image: neo4j:3.5
        env:
          NEO4J_dbms_memory_pagecache_size: 1G
          NEO4J_dbms.memory.heap.initial_size: 1G
          NEO4J_dbms_memory_heap_max__size: 1G
          NEO4J_AUTH: none
        ports:
          - 7687:7687
    defaults:
      run:
        working-directory: server
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-


      - name: Install Composer dependencies
        run: composer install --prefer-dist


      - name: Creating database
        run: |
          bin/console doctrine:database:drop --if-exists --force --env=test
          bin/console doctrine:database:create --env=test
          bin/console doctrine:schema:update --force --env=test
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Load fixtures
        run: |
          bin/console doctrine:fixtures:load -n --env=test
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony
          NEO4J_URL : bolt://localhost:${{ job.services.neo4j.ports['7687'] }}


      - name: Create key pair
        run: bin/console lexik:jwt:generate-keypair --overwrite -n --env=test

      - name: Run unit tests
        run: php bin/phpunit
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony
          NEO4J_URL: bolt://localhost:${{ job.services.neo4j.ports['7687'] }}

      - uses: codecov/codecov-action@v2
        with:
          files: ./server/var/coverage/clover.xml
          flags: tests

  front-env:
    name: Frontend environment setup and tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm i
      - name: Build
        run: npm run build --if-present
      - name: Test
        run: npm run test-ci
      - name: Lint
        run: npm run lint

