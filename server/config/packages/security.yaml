security:
    enable_authenticator_manager: true
    password_hashers:
        App\Security\Entity\User:
            algorithm: auto
        App\Admin\Entity\Administrator:
            algorithm: auto
    providers:
        users_doctrine:
            entity:
                class: App\Security\Entity\User
                property: email
        administrators_doctrine:
            entity:
                class: App\Admin\Entity\Administrator
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin
            provider: administrators_doctrine
            form_login:
                login_path: admin_security_login
                check_path: admin_security_login
            logout:
                path: admin_security_logout
        api_token_refresh:
            pattern: ^/api/security/token-refresh
            stateless: true
            refresh_jwt:
                provider: users_doctrine
        login:
            pattern: ^/api/security/login
            stateless: true
            provider: users_doctrine
            json_login:
                username_path: email
                password_path: password
                check_path: /api/security/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: users_doctrine
    access_control:
        - { path: ^/admin/security/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/security/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/security/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/security/token-refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/security/forgotten-password/request, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
